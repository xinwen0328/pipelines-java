parameters:
  - name: installTerraform
    displayName: install Terraform
    type: boolean
    default: false
  - name: initTerraform
    displayName: init Terraform
    type: boolean
    default: false
  - name: planTerraform
    displayName: plan Terraform
    type: boolean
    default: false
  - name: applyTerraform
    displayName: apply Terraform
    type: boolean
    default: false
  - name: destroyTerraform
    displayName: Destroy Terraform
    type: boolean
    default: false
  - name: workingDirectory
    type: string
  - name: backendServiceAws
    type: string
  - name: providerAwsRegion
    type: string
  - name: mytag1
    type: string

variables:
  - template: /pipeline/variables/variables.yml
    parameters:
      env: prd

jobs:
  - job:
    displayName: Terraform Action
    steps:
      - ${{ if parameters.installTerraform }}:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: latest

      - ${{ if parameters.initTerraform }}:
          - task: TerraformCLI@0
            displayName: 'terraform init'
            inputs:
              command: init
              workingDirectory: ${{ parameters.workingDirectory }}
              # set to `aws` to use aws backend
              backendType: aws
              # service connection name, required if backendType = aws
              backendServiceAws: ${{ parameters.backendServiceAws }}
              # s3 bucket's region, optional if provided elsewhere (i.e. inside terraform template or command options)
              # backendAwsRegion: us-east-2
              # s3 bucket name, optional if provided elsewhere (i.e. inside terraform template or command options)
              # backendAwsBucket: mysuppertfbackend
              # s3 path to state file, optional if provided elsewhere (i.e. inside terraform template or command options)
              # backendAwsKey: mysuppertfbackend/dev-infrax

      - ${{ if parameters.planTerraform }}:
          - task: TerraformCLI@0
            displayName: 'terraform plan'
            inputs:
              command: plan
              workingDirectory: ${{ parameters.workingDirectory }}
              providerServiceAws: ${{ parameters.backendServiceAws }}
              providerAwsRegion: ${{ parameters.providerAwsRegion }}
              commandOptions: "-var mytag1=${{ variables.mytag1 }}"

      - ${{ if parameters.applyTerraform }}:
          - task: TerraformCLI@0
            displayName: 'terraform apply'
            inputs:
              command: apply
              workingDirectory: ${{ parameters.workingDirectory }}
              providerServiceAws: ${{ parameters.backendServiceAws }}
              providerAwsRegion: ${{ parameters.providerAwsRegion }}

      - ${{ if parameters.destroyTerraform }}:
          - task: TerraformCLI@0
            displayName: 'terraform destroy'
            inputs:
              command: destroy
              workingDirectory: ${{ parameters.workingDirectory }}
              providerServiceAws: ${{ parameters.backendServiceAws }}
              providerAwsRegion: ${{ parameters.providerAwsRegion }}