# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

parameters:
  - name: runBash
    displayName: show Title
    type: boolean
    default: true
  - name: mavenBuild
    displayName: maven Build
    type: boolean
    default: false
  - name: installTerraform
    displayName: install Terraform
    type: boolean
    default: false
  - name: initTerraform
    displayName: init Terraform
    type: boolean
    default: false

variables:
  - template: variables/variables.yml
    parameters:
      env: prd

trigger:
- main

pool:
  mypool

steps:
- task: MavenAuthenticate@0
  inputs:
    artifactsFeeds: xinwenliu

- ${{ if parameters.runBash  }}:
    - task: Bash@3
      displayName: Run Pipeline in ${{ variables.region }} on ${{ variables.environment }}
      inputs:
        targetType: 'inline'
        script: |
          echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>";
          echo "I'm in " ${{ variables.region }}
          echo "My build agent is" $HOSTNAME
          echo "My Path is" $PWD 
          echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<";

- ${{ if parameters.mavenBuild }}:
  - task: Maven@3
    displayName: MavenBuild
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'


- ${{ if parameters.installTerraform }}:
  - task: TerraformInstaller@1
    displayName: install terraform
    inputs:
      terraformVersion: latest

- ${{ if parameters.initTerraform }}:
  - task: TerraformCLI@0
    displayName: 'terraform init'
    inputs:
      command: init
      workingDirectory: pipeline/template/iac
      # set to `aws` to use aws backend
      backendType: aws
      # service connection name, required if backendType = aws
      backendServiceAws: my-aws-connection
      # s3 bucket's region, optional if provided elsewhere (i.e. inside terraform template or command options)
      backendAwsRegion: us-east-2
      # s3 bucket name, optional if provided elsewhere (i.e. inside terraform template or command options)
      backendAwsBucket: mysuppertfbackend
      # s3 path to state file, optional if provided elsewhere (i.e. inside terraform template or command options)
      backendAwsKey: 'mysuppertfbackend/dev-infrax'