# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

parameters:
  - name: showTitle
    displayName: show Title
    type: boolean
    default: true
  - name: mavenBuild
    displayName: maven Build
    type: boolean
    default: false
  - name: installTerraform
    displayName: install Terraform
    type: boolean
    default: false
  - name: planTerraform
    displayName: plan Terraform
    type: boolean
    default: false
  - name: applyTerraform
    displayName: apply Terraform
    type: boolean
    default: false
  - name: destroyTerraform
    displayName: Destroy Terraform
    type: boolean
    default: false
  - name: mymodule
    displayName: My Module
    type: string
    default: module
    values:
      - module
      - module.subnet
      - module.vpc

variables:
  - template: /pipeline/variables/variables.yml
    parameters:
      env: prd

#trigger:
#  - main

pool:
  mypool

stages:
  - ${{ if parameters.showTitle  }}:
    - stage: showPipeline
      displayName: Show Pipeline
      jobs:
      - job: ShowPipelineInfo1
        displayName: PipeLineInfo1
        steps:
          - task: Bash@3
            displayName: Run Pipeline on ${{ variables.environment }} from ${{ variables.region }}
            inputs:
              targetType: 'inline'
              script: |
                echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>";
                echo "I'm running pipeline from "${PWD}" on "${HOSTNAME}" for "${{ variables.region }}
                echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<";

      - job: ShowPipelineInfo2
        displayName: PipeLineInfo2
        steps:
          - task: Bash@3
            displayName: Run Pipeline on ${{ variables.environment }} from ${{ variables.region }}
            inputs:
              targetType: 'inline'
              script: |
                echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>";
                echo "I'm running pipeline from "${PWD}" on "${HOSTNAME}" for "${{ variables.region }}
                echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<";

  - ${{ if parameters.mavenBuild }}:
    - stage: mavenBuild
      displayName: Maven Build
      jobs:
        - job: mavenJob
          displayName: Maven Job
          steps:
            - task: MavenAuthenticate@0
              inputs:
                artifactsFeeds: xinwenliu

            - task: Maven@3
              inputs:
                mavenPomFile: 'pom.xml'
                mavenOptions: '-Xmx3072m'
                javaHomeOption: 'JDKVersion'
                jdkVersionOption: '1.8'
                jdkArchitectureOption: 'x64'
                publishJUnitResults: true
                testResultsFiles: '**/surefire-reports/TEST-*.xml'
                goals: 'package'

  - ${{ if parameters.installTerraform }}:
    - stage: InstallTerraform
      displayName: Install Terraform
      jobs:
        - template: template/stage-iac-terraform.yml
          parameters:
            installTerraform: true
            initTerraform: false
            planTerraform: false
            applyTerraform: false
            destroyTerraform: false
            workingDirectory: ${{ variables.defaultWorkingDirectory }}
            backendServiceAws: ${{ variables.serviceconnection }}
            providerAwsRegion: ${{ variables.cloudregion }}
            myModule: ${{ parameters.mymodule }}

  - ${{ if parameters.planTerraform }}:
      - stage: planTerraform
        displayName: Plan Terraform
        jobs:
          - template: template/stage-iac-terraform.yml
            parameters:
              installTerraform: false
              initTerraform: true
              planTerraform: true
              applyTerraform: false
              destroyTerraform: false
              workingDirectory: ${{ variables.defaultWorkingDirectory }}
              backendServiceAws: ${{ variables.serviceconnection }}
              providerAwsRegion: ${{ variables.cloudregion }}
              myModule: ${{ parameters.mymodule }}

  - ${{ if parameters.applyTerraform }}:
    - stage: applyTerraform
      displayName: Apply Terraform
      jobs:
        - template: template/stage-iac-terraform.yml
          parameters:
            installTerraform: false
            initTerraform: true
            planTerraform: true
            applyTerraform: true
            destroyTerraform: false
            workingDirectory: ${{ variables.defaultWorkingDirectory }}
            backendServiceAws: ${{ variables.serviceconnection }}
            providerAwsRegion: ${{ variables.cloudregion }}
            myModule: ${{ parameters.mymodule }}

  - ${{ if parameters.destroyTerraform }}:
    - stage: destroyTerraform
      displayName: Destroy Terraform
      jobs:
        - template: template/stage-iac-terraform.yml
          parameters:
            installTerraform: false
            initTerraform: true
            planTerraform: false
            applyTerraform: false
            destroyTerraform: true
            workingDirectory: ${{ variables.defaultWorkingDirectory }}
            backendServiceAws: ${{ variables.serviceconnection }}
            providerAwsRegion: ${{ variables.cloudregion }}
            myModule: ${{ parameters.mymodule }}




