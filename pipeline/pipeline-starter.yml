# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

parameters:
  - name: testPipeline
    displayName: Test Running
    type: boolean
    default: false
  - name: selectEnvironment
    displayName: Select Environment
    type: string
    values:
      - 'development'
      - 'production'
  - name: selectAction
    displayName: Select your terraform action
    type: string
    values:
      - 'selectedAction'
      - 'installTerraform'
      - 'planTerraform'
      - 'applyTerraform'
      - 'destroyTerraform'

variables:
  - template: /pipeline/variables/variables.yml
    parameters:
      ${{ if eq(parameters.selectEnvironment, 'development') }}:
        env: dev
      ${{ if eq(parameters.selectEnvironment, 'production') }}:
        env: prd

pool:
  mypool

stages:
  - ${{ if parameters.testPipeline }}:
    - stage: showPipeline
      displayName: Show Pipeline
      jobs:
      - job: ShowPipelineInfo1
        displayName: JOB #1 DEMO
        steps:
          - task: Bash@3
            displayName: Run Pipeline on ${{ variables.environment }} from ${{ variables.region }}
            inputs:
              targetType: 'inline'
              script: |
                echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>";
                echo "I'm running pipeline from "${PWD}" on "${HOSTNAME}" for "${{ variables.region }}
                echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<";

      - job: ShowPipelineInfo2
        displayName: JOB #1 DEMO
        steps:
          - task: Bash@3
            displayName: Run Pipeline on ${{ variables.environment }} from ${{ variables.region }}
            inputs:
              targetType: 'inline'
              script: |
                echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>";
                echo "I'm running pipeline from "${PWD}" on "${HOSTNAME}" for "${{ variables.region }}
                echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<";

  - ${{ if eq(parameters.selectAction, 'installTerraform') }}:
    - stage: InstallTerraform
      displayName: Install Terraform
      jobs:
        - template: template/stage-iac-terraform.yml
          parameters:
            installTerraform: true
            initTerraform: false
            planTerraform: false
            applyTerraform: false
            destroyTerraform: false
            workingDirectory: ${{ variables.defaultWorkingDirectory }}
            backendServiceAws: ${{ variables.serviceconnection }}
            providerAwsRegion: ${{ variables.cloudregion }}
            iacConfigFile: ''
            iacBackendFile: ${{ variables.iac_backend_file }}

  - ${{ if eq(parameters.selectAction, 'planTerraform') }}:
      - stage: planTerraform
        displayName: Plan Terraform
        jobs:
          - template: template/stage-iac-terraform.yml
            parameters:
              installTerraform: false
              initTerraform: true
              planTerraform: true
              applyTerraform: false
              destroyTerraform: false
              workingDirectory: ${{ variables.defaultWorkingDirectory }}
              backendServiceAws: ${{ variables.serviceconnection }}
              providerAwsRegion: ${{ variables.cloudregion }}
              iacConfigFile: ${{ variables.iac_config_file }}
              iacBackendFile: ${{ variables.iac_backend_file }}

  - ${{ if eq(parameters.selectAction, 'applyTerraform') }}:
    - stage: applyTerraform
      displayName: Apply Terraform
      jobs:
        - template: template/stage-iac-terraform.yml
          parameters:
            installTerraform: false
            initTerraform: true
            planTerraform: true
            applyTerraform: true
            destroyTerraform: false
            workingDirectory: ${{ variables.defaultWorkingDirectory }}
            backendServiceAws: ${{ variables.serviceconnection }}
            providerAwsRegion: ${{ variables.cloudregion }}
            iacConfigFile: ${{ variables.iac_config_file }}
            iacBackendFile: ${{ variables.iac_backend_file }}

  - ${{ if eq(parameters.selectAction, 'destroyTerraform') }}:
    - stage: destroyTerraform
      displayName: Destroy Terraform
      jobs:
        - template: template/stage-iac-terraform.yml
          parameters:
            installTerraform: false
            initTerraform: true
            planTerraform: false
            applyTerraform: false
            destroyTerraform: true
            workingDirectory: ${{ variables.defaultWorkingDirectory }}
            backendServiceAws: ${{ variables.serviceconnection }}
            providerAwsRegion: ${{ variables.cloudregion }}
            iacConfigFile: ${{ variables.iac_config_file }}
            iacBackendFile: ${{ variables.iac_backend_file }}





