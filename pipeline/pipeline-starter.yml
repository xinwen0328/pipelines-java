# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

parameters:
  - name: runBash
    displayName: show Title
    type: boolean
    default: true
  - name: mavenBuild
    displayName: maven Build
    type: boolean
    default: false
  - name: installTerraform
    displayName: install Terraform
    type: boolean
    default: false
  - name: applyTerraform
    displayName: apply Terraform
    type: boolean
    default: false
  - name: destroyTerraform
    displayName: Destroy Terraform
    type: boolean
    default: false

variables:
  - template: variables/variables.yml
    parameters:
      env: prd

trigger:
- main

pool:
  mypool

stages:
  - ${{ if parameters.runBash  }}:
    - stage: Stage1
      displayName: Stage-1
      jobs:
      - job: Stage1-jobs-job1
        steps:
          - task: Bash@3
            displayName: Run Pipeline in ${{ variables.region }} on ${{ variables.environment }}
            inputs:
              targetType: 'inline'
              script: |
                echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>";
                echo "I'm in " ${{ variables.region }}
                echo "My build agent is" $HOSTNAME
                echo "My Path is" $PWD 
                echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<";

  - ${{ if parameters.mavenBuild }}:
    - stage: Stage2
      displayName: Stage-2
      jobs:
        - job: Stage2-jobs-job1
          steps:
            - task: MavenAuthenticate@0
              inputs:
                artifactsFeeds: xinwenliu

            - task: Maven@3
              displayName: MavenBuild
              inputs:
                mavenPomFile: 'pom.xml'
                mavenOptions: '-Xmx3072m'
                javaHomeOption: 'JDKVersion'
                jdkVersionOption: '1.8'
                jdkArchitectureOption: 'x64'
                publishJUnitResults: true
                testResultsFiles: '**/surefire-reports/TEST-*.xml'
                goals: 'package'

  - ${{ if parameters.installTerraform }}:
    - stage: Stage3
      displayName: Stage-2
      jobs:
        - job: Stage3-jobs-1
          steps:
            - task: TerraformInstaller@1
              displayName: install terraform
              inputs:
                terraformVersion: latest

  - ${{ if parameters.applyTerraform }}:
    - stage: Stage3
      displayName: Stage-2
      jobs:
        - template: iac/stage-iac-apply.yml
          parameters:
            initTerraform: true
            planTerraform: true
            applyTerraform: true

  - ${{ if parameters.destroyTerraform }}:
    - stage: Stage3
      displayName: Stage-2
      jobs:
        - template: iac/stage-iac-destroy.yml
          parameters:
            initTerraform: true
            planTerraform: true
            applyTerraform: true




